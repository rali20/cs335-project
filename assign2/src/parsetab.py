
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightAGNNOTleftLORleftLANDleftORleftXORleftANDleftEQLNEQleftLSSGTRLEQGEQleftSHLSHRleftADDSUBleftMULQUOREMADD ADD_AGN AGN AND AND_AGN BOOL_T BREAK CASE COLON COMMA COMPLEX_T CONST CONTINUE DEC DEFAULT DEFN DOT ELPS ELSE EQL FLOAT FLOAT_T FOR FUNC GEQ GOTO GTR HEX IDENT IF IMAGINARY IMPORT INC INTEGER INT_T LAND LCURL LEQ LOR LPRN LSQR LSS MUL MUL_AGN NEQ NOT OCTAL OR OR_AGN PACKAGE QUO QUO_AGN RCURL REM REM_AGN RETURN RPRN RSQR RUNE RUNE_T SEMCLN SHL SHL_AGN SHR SHR_AGN STRING STRING_T STRUCT SUB SUB_AGN SWITCH TYPE TYPECAST UINT_T VAR XOR XOR_AGNstart : SourceFileType : TypeName\n            | TypeLit\n            | LPRN Type RPRNTypeName : TypeToken\n                | QualifiedIdentTypeToken : INT_T\n                 | FLOAT_T\n                 | UINT_T\n                 | COMPLEX_T\n                 | RUNE_T\n                 | BOOL_T\n                 | STRING_T\n                 | TYPE IDENTTypeLit : ArrayType\n               | StructType\n               | PtrTypeArrayType : LSQR ArrayLength RSQR ElementType ArrayLength : Expr  ElementType : Type StructType : STRUCT LCURL FieldDeclRep RCURL  FieldDeclRep : FieldDecl SEMCLN FieldDeclRep\n                  | epsilon  FieldDecl : IdentList TypePtrType : MUL BaseTypeBaseType : TypeSignature : Parameters\n                 | Parameters TypeParameters : LPRN RPRN\n                  | LPRN ParamList RPRNParamList : ParamDecl\n                      | ParamDeclCommaRepParamDeclCommaRep : COMMA ParamDecl ParamDeclCommaRep\n                             | ParamDecl COMMA ParamDeclParamDecl : IdentList Type\n                     | TypeBlock : LCURL StmtList RCURLStmtList : Statement SEMCLN StmtList\n                     | epsilonDeclaration : ConstDecl\n                 | TypeDecl\n                 | VarDeclTopLvlDecl : Declaration\n                  | FuncDecl\n                  | MethodDeclConstDecl : CONST ConstSpec\n                 | CONST LPRN ConstSpecRep RPRNConstSpecRep : ConstSpec SEMCLN ConstSpecRep\n                    | epsilonConstSpec : IdentList Type AGN ExprListIdentList : IDENT IdentRepIdentRep : COMMA IDENT IdentRep\n                     | epsilonExprList : Expr\n                      | Expr COMMA ExprListTypeDecl : TYPE TypeSpec\n                | TYPE LPRN TypeSpecRep RPRNTypeSpecRep : TypeSpecRep TypeSpec SEMCLN\n                   | epsilonTypeSpec : TypeDefTypeDef : IDENT TypeVarDecl : VAR VarSpec\n               | VAR LPRN VarSpecRep RPRNVarSpecRep : VarSpecRep VarSpec SEMCLN\n                  | epsilonVarSpec : IdentList Type ExprListOpt\n               | IdentList AGN ExprListExprListOpt : AGN ExprList\n                         | epsilon ShortVarDecl : IDENT DEFN Expr FuncDecl : FUNC FuncName  Signature  FuncBody\n                    | FUNC FuncName  Signature FuncName : IDENTFuncBody : BlockMethodDecl : FUNC Receiver MethodName Signature\n                  | FUNC Receiver MethodName Signature FuncBodyReceiver : ParametersMethodName : IDENTOperand : Literal\n               | OperandName\n               | LPRN Expr RPRNLiteral : BasicLitBasicLit : INTEGER\n                | OCTAL\n                | HEX\n                | FLOAT\n                | IMAGINARY\n                | RUNE\n                | STRINGOperandName : IDENTQualifiedIdent : IDENT DOT TypeNamePmryExpr : Operand\n                   | Conversion\n                   | PmryExpr Slice\n                   | PmryExpr Selector\n                   | PmryExpr TypeAssertion\n                   | PmryExpr LSQR Expr RSQR\n                   | PmryExpr LPRN ExprListTypeOpt RPRNSelector : DOT IDENTSlice : LSQR ExprOpt COLON ExprOpt RSQR\n             | LSQR ExprOpt COLON Expr COLON Expr RSQRTypeAssertion : DOT LPRN Type RPRNExprListTypeOpt : ExprList\n                             | epsilonExpr : UnaryExpr\n                  | Expr LOR Expr\n                  | Expr LAND Expr\n                  | Expr NEQ Expr\n                  | Expr EQL Expr\n                  | Expr LSS Expr\n                  | Expr GTR Expr\n                  | Expr LEQ Expr\n                  | Expr GEQ Expr\n                  | Expr OR Expr\n                  | Expr XOR Expr\n                  | Expr QUO Expr\n                  | Expr REM Expr\n                  | Expr SHL Expr\n                  | Expr SHR Expr\n                  | Expr ADD Expr\n                  | Expr SUB Expr\n                  | Expr MUL Expr\n                  | Expr AND ExprExprOpt : Expr\n                     | epsilonUnaryExpr : PmryExpr\n                 | UnaryOp UnaryExpr\n                 | NOT UnaryExprUnaryOp : ADD\n               | SUB\n               | MUL\n               | AND Conversion : TYPECAST Type LPRN Expr RPRNStatement : Declaration\n                 | LabeledStmt\n                 | SimpleStmt\n                 | ReturnStmt\n                 | BreakStmt\n                 | ContinueStmt\n                 | GotoStmt\n                 | Block\n                 | IfStmt\n                 | SwitchStmt\n                 | ForStmt SimpleStmt : epsilon\n                 | ExprStmt\n                 | IncDecStmt\n                 | Assignment\n                 | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENT  ExprStmt : Expr  IncDecStmt : Expr INC\n                 | Expr DEC GotoStmt : GOTO Label  Assignment : ExprList AssignOp ExprList AssignOp : ADD_AGN\n               | SUB_AGN\n               | MUL_AGN\n               | QUO_AGN\n               | REM_AGN\n               | AND_AGN\n               | OR_AGN\n               | XOR_AGN\n               | SHL_AGN\n               | SHR_AGN\n               | AGN  IfStmt : IF Expr Block  ElseOpt ElseOpt : ELSE IfStmt\n              | ELSE  Block\n              | epsilon  SwitchStmt : ExprSwitchStmt  ExprSwitchStmt : SWITCH Expr  LCURL ExprCaseClauseRep RCURL   ExprCaseClauseRep : ExprCaseClauseRep ExprCaseClause\n                        | epsilon ExprCaseClause : ExprSwitchCase COLON StmtList  ExprSwitchCase : CASE Expr\n                     | DEFAULT ForStmt : FOR  CondBlkOpt Block CondBlkOpt : epsilon\n             | Condition\n             | ForClauseCondition : Expr ForClause : SimpleStmt SEMCLN SEMCLN SimpleStmt\n               | SimpleStmt SEMCLN Condition SEMCLN SimpleStmtReturnStmt : RETURN\n                | RETURN ExprBreakStmt : BREAK\n               | BREAK LabelContinueStmt : CONTINUE\n                  | CONTINUE LabelSourceFile : PkgClause SEMCLN ImportDeclRep TopLvlDeclRepImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SEMCLNTopLvlDeclRep : TopLvlDeclRep TopLvlDecl SEMCLN\n                     | epsilonPkgClause : PACKAGE PkgNamePkgName : IDENTImportDecl : IMPORT ImportSpec\n                | IMPORT LPRN ImportSpecRep RPRN  ImportSpecRep : ImportSpecRep ImportSpec SEMCLN\n                    | epsilon  ImportSpec : PkgNameDotOpt ImportPath  PkgNameDotOpt : DOT\n                        | PkgName\n                        | epsilon ImportPath : STRING epsilon : '
    
_lr_action_items = {'AGN':([35,42,56,58,59,60,62,63,64,65,66,67,68,71,72,75,76,77,79,95,103,104,108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,134,135,147,157,158,159,162,164,165,187,192,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,262,285,286,296,297,299,314,315,324,339,],[-208,94,-15,-17,105,-9,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,149,-26,-25,-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-14,-208,-54,-4,-91,-127,-94,-95,-96,-128,-52,270,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-20,-18,-21,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'CONST':([7,8,9,10,11,25,44,143,264,280,338,],[-208,-193,-208,-196,14,-194,-195,14,14,14,14,]),'SUB':([70,94,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,131,132,143,147,149,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,205,209,210,214,222,224,228,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,260,264,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,285,286,290,295,297,298,299,301,307,308,313,314,315,317,318,324,325,326,328,335,337,338,339,],[109,109,109,-93,-130,109,-79,-90,-131,109,-80,-82,-88,-83,-87,-126,-89,171,-85,-105,-92,-129,-84,-132,-86,109,109,171,109,-127,171,109,-94,109,-95,-96,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-128,109,-90,109,109,171,109,109,-81,171,-99,171,171,171,171,-121,-120,171,171,171,171,171,-117,-122,171,171,171,-116,171,109,109,-166,109,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,171,109,109,-90,171,171,171,-98,109,-97,171,171,109,171,-102,-133,171,109,-100,109,109,109,171,171,109,-101,]),'AND_AGN':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,147,159,162,164,165,187,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,296,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-54,-127,-94,-95,-96,-128,269,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'SUB_AGN':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,147,159,162,164,165,187,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,296,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-54,-127,-94,-95,-96,-128,275,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'RSQR':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,127,128,131,159,162,164,165,187,231,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,297,298,299,312,313,314,315,324,335,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-19,-85,-105,-92,185,-84,-86,-127,-94,-95,-96,-128,-81,-125,299,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-98,-208,-97,324,-124,-102,-133,-100,339,-101,]),'QUO_AGN':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,147,159,162,164,165,187,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,296,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-54,-127,-94,-95,-96,-128,272,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'GOTO':([143,264,280,338,],[201,201,201,201,]),'LOR':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,174,-85,-105,-92,-84,-86,174,-127,174,-94,-95,-96,-128,-90,174,-81,174,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,174,-90,174,174,174,-98,-97,174,174,174,-102,-133,174,-100,174,174,-101,]),'OCTAL':([70,94,105,109,110,113,114,126,129,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,298,308,318,325,326,328,338,],[128,128,128,-130,128,-131,128,-129,-132,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-166,128,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,128,128,128,128,128,128,128,128,128,]),'COLON':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,159,162,163,164,165,187,206,209,231,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,297,299,313,314,315,324,329,330,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-127,-94,-208,-95,-96,-128,280,-151,-81,298,-125,-124,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-98,-97,325,-102,-133,-100,338,-178,-177,-101,]),'IF':([143,264,280,321,338,],[224,224,224,224,224,]),'REM':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,178,-85,-105,-92,-84,-86,178,-127,178,-94,-95,-96,-128,-90,178,-81,178,-99,178,178,178,178,178,178,178,178,178,178,178,-117,-122,178,178,178,-116,178,178,-90,178,178,178,-98,-97,178,178,178,-102,-133,178,-100,178,178,-101,]),'MUL':([33,35,36,42,47,56,57,58,60,61,62,63,64,65,66,67,68,70,71,72,75,76,77,79,80,83,84,85,86,88,94,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,134,135,136,137,138,139,143,147,149,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,192,205,209,210,214,222,224,228,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,262,264,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,285,286,290,295,297,298,299,301,307,308,313,314,315,317,318,324,325,326,328,335,337,338,339,],[57,-208,57,57,57,-15,57,-17,-9,57,-5,-3,-8,-2,-10,-12,-16,113,-7,-13,-6,-11,-53,-51,57,-36,-29,57,-208,57,113,-26,-25,113,-93,-130,113,-79,-90,-131,113,-80,-82,-88,-83,-87,-126,-89,179,-85,-105,-92,-129,-84,-132,57,-86,113,-14,-208,-35,57,57,-30,113,179,113,-4,-91,-127,179,113,-94,113,-95,-96,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,57,-128,57,-52,113,-90,113,113,179,113,113,-81,179,57,-99,179,179,179,179,179,179,179,179,179,179,179,-117,-122,179,179,179,-116,179,-20,-18,113,-21,113,-166,113,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,179,113,113,-90,179,179,179,-98,113,-97,179,179,113,179,-102,-133,179,113,-100,113,113,113,179,179,113,-101,]),'RUNE':([70,94,105,109,110,113,114,126,129,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,298,308,318,325,326,328,338,],[117,117,117,-130,117,-131,117,-129,-132,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-166,117,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,117,117,117,117,117,117,117,117,117,]),'DOT':([13,26,49,50,69,86,108,111,112,115,116,117,118,119,120,121,123,125,128,131,154,162,164,165,209,231,239,285,297,299,314,315,324,339,],[31,-208,-202,31,107,107,-93,-79,-90,-80,-82,-88,-83,-87,166,-89,-85,-92,-84,-86,-201,-94,-95,-96,-90,-81,-99,-90,-98,-97,-102,-133,-100,-101,]),'UINT_T':([33,35,36,42,47,56,57,58,60,61,62,63,64,65,66,67,68,71,72,75,76,77,79,80,83,84,85,86,88,103,104,107,130,134,135,136,137,138,139,157,158,185,188,192,238,258,259,262,],[60,-208,60,60,60,-15,60,-17,-9,60,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,60,-36,-29,60,-208,60,-26,-25,60,60,-14,-208,-35,60,60,-30,-4,-91,60,60,-52,60,-20,-18,-21,]),'LPRN':([13,14,17,18,22,33,35,36,37,39,42,47,56,57,58,60,61,62,63,64,65,66,67,68,70,71,72,75,76,77,79,80,83,84,85,86,88,90,91,94,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,128,129,130,131,132,134,135,136,137,138,139,143,149,157,158,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,192,205,209,210,214,224,228,231,238,239,258,259,260,262,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,285,297,298,299,308,314,315,318,324,325,326,328,338,339,],[26,32,36,41,45,61,-208,61,-73,36,61,61,-15,61,-17,-9,61,-5,-3,-8,-2,-10,-12,-16,114,-7,-13,-6,-11,-53,-51,61,-36,-29,61,-208,61,-78,36,114,-26,-25,114,-93,-130,114,-79,-90,-131,114,-80,-82,-88,-83,-87,161,-89,-85,-92,-129,-84,-132,61,-86,114,-14,-208,-35,61,61,-30,114,114,-4,-91,114,-94,114,-95,-96,238,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,61,260,61,-52,114,-90,114,114,114,114,-81,61,-99,-20,-18,114,-21,114,-166,114,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,114,114,-90,-98,114,-97,114,-102,-133,114,-100,114,114,114,114,-101,]),'SHR_AGN':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,147,159,162,164,165,187,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,296,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-54,-127,-94,-95,-96,-128,267,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'GEQ':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,168,-85,-105,-92,-84,-86,168,-127,168,-94,-95,-96,-128,-90,168,-81,168,-99,168,-113,168,168,-121,-120,-119,168,-112,-111,168,-117,-122,168,-118,168,-116,-110,168,-90,168,168,168,-98,-97,168,168,168,-102,-133,168,-100,168,168,-101,]),'DEC':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,159,162,164,165,187,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-127,-94,-95,-96,-128,-90,293,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,293,-98,-97,-102,-133,-100,-101,]),'NEQ':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,180,-85,-105,-92,-84,-86,180,-127,180,-94,-95,-96,-128,-90,180,-81,180,-99,180,-113,180,180,-121,-120,-119,180,-112,-111,-109,-117,-122,-108,-118,180,-116,-110,180,-90,180,180,180,-98,-97,180,180,180,-102,-133,180,-100,180,180,-101,]),'OR_AGN':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,147,159,162,164,165,187,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,296,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-54,-127,-94,-95,-96,-128,277,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'RPRN':([26,32,36,41,45,49,50,54,55,56,58,60,62,63,64,65,66,67,68,71,72,75,76,81,82,83,87,92,93,96,97,101,103,104,106,108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,134,136,147,154,155,157,158,159,160,161,162,164,165,187,193,195,227,230,231,232,233,234,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,262,296,297,299,300,301,314,315,324,339,],[-208,-208,84,-208,-208,-202,100,102,-49,-15,-17,-9,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-31,-32,-36,139,145,-65,152,-59,-208,-26,-25,157,-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-14,-35,-54,-201,-48,-4,-91,-127,231,-208,-94,-95,-96,-128,-34,-33,-64,-58,-81,297,-104,-103,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-20,-18,-21,-55,-98,-97,314,315,-102,-133,-100,-101,]),'XOR_AGN':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,147,159,162,164,165,187,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,296,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-54,-127,-94,-95,-96,-128,271,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'FLOAT_T':([33,35,36,42,47,56,57,58,60,61,62,63,64,65,66,67,68,71,72,75,76,77,79,80,83,84,85,86,88,103,104,107,130,134,135,136,137,138,139,157,158,185,188,192,238,258,259,262,],[64,-208,64,64,64,-15,64,-17,-9,64,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,64,-36,-29,64,-208,64,-26,-25,64,64,-14,-208,-35,64,64,-30,-4,-91,64,64,-52,64,-20,-18,-21,]),'RCURL':([133,143,189,191,216,221,263,264,302,303,310,319,320,332,338,340,],[-208,-208,262,-23,-39,292,-208,-208,-22,-38,-208,331,-175,-174,-208,-176,]),'INC':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,159,162,164,165,187,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-127,-94,-95,-96,-128,-90,294,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,294,-98,-97,-102,-133,-100,-101,]),'DEFAULT':([216,264,303,310,319,320,332,338,340,],[-39,-208,-38,-208,330,-175,-174,-208,-176,]),'SWITCH':([143,264,280,338,],[214,214,214,214,]),'COMPLEX_T':([33,35,36,42,47,56,57,58,60,61,62,63,64,65,66,67,68,71,72,75,76,77,79,80,83,84,85,86,88,103,104,107,130,134,135,136,137,138,139,157,158,185,188,192,238,258,259,262,],[66,-208,66,66,66,-15,66,-17,-9,66,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,66,-36,-29,66,-208,66,-26,-25,66,66,-14,-208,-35,66,66,-30,-4,-91,66,66,-52,66,-20,-18,-21,]),'LSS':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,184,-85,-105,-92,-84,-86,184,-127,184,-94,-95,-96,-128,-90,184,-81,184,-99,184,-113,184,184,-121,-120,-119,184,-112,-111,184,-117,-122,184,-118,184,-116,-110,184,-90,184,184,184,-98,-97,184,184,184,-102,-133,184,-100,184,184,-101,]),'IMPORT':([7,8,9,25,],[-208,-193,13,-194,]),'IMAGINARY':([70,94,105,109,110,113,114,126,129,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,298,308,318,325,326,328,338,],[119,119,119,-130,119,-131,119,-129,-132,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-166,119,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,119,119,119,119,119,119,119,119,119,]),'LCURL':([56,58,60,62,63,64,65,66,67,68,71,72,73,75,76,84,88,89,103,104,108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,134,139,140,143,144,147,157,158,159,162,164,165,187,199,200,204,210,222,223,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,262,264,280,283,284,285,286,287,288,290,293,294,295,296,297,299,304,306,307,314,315,318,321,324,326,327,336,338,339,],[-15,-17,-9,-5,-3,-8,-2,-10,-12,-16,-7,-13,133,-6,-11,-29,-27,143,-26,-25,-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-14,-30,-28,143,143,-54,-4,-91,-127,-94,-95,-96,-128,-148,-147,-146,-208,-152,-149,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-20,-18,-21,143,143,-180,-181,-90,-183,143,-182,310,-154,-153,143,-55,-98,-97,-156,-145,-70,-102,-133,-208,143,-100,-208,-184,-185,143,-101,]),'BOOL_T':([33,35,36,42,47,56,57,58,60,61,62,63,64,65,66,67,68,71,72,75,76,77,79,80,83,84,85,86,88,103,104,107,130,134,135,136,137,138,139,157,158,185,188,192,238,258,259,262,],[67,-208,67,67,67,-15,67,-17,-9,67,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,67,-36,-29,67,-208,67,-26,-25,67,67,-14,-208,-35,67,67,-30,-4,-91,67,67,-52,67,-20,-18,-21,]),'CASE':([216,264,303,310,319,320,332,338,340,],[-39,-208,-38,-208,328,-175,-174,-208,-176,]),'SHR':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,173,-85,-105,-92,-84,-86,173,-127,173,-94,-95,-96,-128,-90,173,-81,173,-99,173,173,173,173,-121,-120,-119,173,173,173,173,-117,-122,173,-118,173,-116,173,173,-90,173,173,173,-98,-97,173,173,173,-102,-133,173,-100,173,173,-101,]),'IDENT':([1,13,14,17,18,22,26,32,33,35,36,38,40,41,42,45,47,49,50,56,57,58,60,61,62,63,64,65,66,67,68,70,71,72,74,75,76,77,78,79,80,83,84,85,86,88,92,93,94,96,97,101,103,104,105,107,109,110,113,114,126,129,130,132,133,134,135,136,137,138,139,143,149,154,157,158,161,163,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,188,192,201,205,210,213,214,217,224,227,228,230,238,258,259,260,262,263,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,298,308,318,325,326,328,338,],[5,5,35,37,35,47,-208,35,69,-208,86,-77,90,-208,69,-208,69,-202,5,-15,69,-17,-9,69,-5,-3,-8,-2,-10,-12,-16,112,-7,-13,134,-6,-11,-53,135,-51,69,-36,-29,86,-208,69,35,-65,112,47,-59,35,-26,-25,112,69,-130,112,-131,112,-129,-132,69,112,35,-14,-208,-35,86,86,-30,209,112,-201,-4,-91,112,112,239,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,69,69,-52,265,112,285,265,112,265,112,-64,112,-58,69,-20,-18,112,-21,35,209,-166,112,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,209,112,112,112,285,112,285,112,209,]),'XOR':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,170,-85,-105,-92,-84,-86,170,-127,170,-94,-95,-96,-128,-90,170,-81,170,-99,-123,-113,170,-115,-121,-120,-119,170,-112,-111,-109,-117,-122,-108,-118,170,-116,-110,170,-90,170,170,170,-98,-97,170,170,170,-102,-133,170,-100,170,170,-101,]),'STRING':([5,13,26,27,29,30,31,49,50,70,94,105,109,110,113,114,126,129,132,143,149,154,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,298,308,318,325,326,328,338,],[-198,-208,-208,-205,-206,52,-204,-202,-208,121,121,121,-130,121,-131,121,-129,-132,121,121,121,-201,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-166,121,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,121,121,121,121,121,121,121,121,121,]),'FOR':([143,264,280,338,],[210,210,210,210,]),'PACKAGE':([0,],[1,]),'LSQR':([33,35,36,42,47,56,57,58,60,61,62,63,64,65,66,67,68,71,72,75,76,77,79,80,83,84,85,86,88,103,104,108,111,112,115,116,117,118,119,120,121,123,125,128,130,131,134,135,136,137,138,139,157,158,162,164,165,185,188,192,209,231,238,239,258,259,262,285,297,299,314,315,324,339,],[70,-208,70,70,70,-15,70,-17,-9,70,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,70,-36,-29,70,-208,70,-26,-25,-93,-79,-90,-80,-82,-88,-83,-87,163,-89,-85,-92,-84,70,-86,-14,-208,-35,70,70,-30,-4,-91,-94,-95,-96,70,70,-52,-90,-81,70,-99,-20,-18,-21,-90,-98,-97,-102,-133,-100,-101,]),'INT_T':([33,35,36,42,47,56,57,58,60,61,62,63,64,65,66,67,68,71,72,75,76,77,79,80,83,84,85,86,88,103,104,107,130,134,135,136,137,138,139,157,158,185,188,192,238,258,259,262,],[71,-208,71,71,71,-15,71,-17,-9,71,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,71,-36,-29,71,-208,71,-26,-25,71,71,-14,-208,-35,71,71,-30,-4,-91,71,71,-52,71,-20,-18,-21,]),'HEX':([70,94,105,109,110,113,114,126,129,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,298,308,318,325,326,328,338,],[123,123,123,-130,123,-131,123,-129,-132,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-166,123,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,123,123,123,123,123,123,123,123,123,]),'ELSE':([292,311,],[-37,321,]),'COMMA':([35,36,56,58,60,62,63,64,65,66,67,68,71,72,75,76,81,83,86,103,104,108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,134,135,136,138,147,157,158,159,162,164,165,187,194,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,262,285,286,297,299,314,315,324,339,],[78,85,-15,-17,-9,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,137,-36,78,-26,-25,-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-14,78,-35,85,228,-4,-91,-127,-94,-95,-96,-128,137,-90,228,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-20,-18,-21,-90,228,-98,-97,-102,-133,-100,-101,]),'SHL_AGN':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,147,159,162,164,165,187,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,296,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-54,-127,-94,-95,-96,-128,278,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'ADD':([70,94,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,131,132,143,147,149,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,205,209,210,214,222,224,228,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,260,264,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,285,286,290,295,297,298,299,301,307,308,313,314,315,317,318,324,325,326,328,335,337,338,339,],[126,126,126,-93,-130,126,-79,-90,-131,126,-80,-82,-88,-83,-87,-126,-89,172,-85,-105,-92,-129,-84,-132,-86,126,126,172,126,-127,172,126,-94,126,-95,-96,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-128,126,-90,126,126,172,126,126,-81,172,-99,172,172,172,172,-121,-120,172,172,172,172,172,-117,-122,172,172,172,-116,172,126,126,-166,126,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,172,126,126,-90,172,172,172,-98,126,-97,172,172,126,172,-102,-133,172,126,-100,126,126,126,172,172,126,-101,]),'LAND':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,169,-85,-105,-92,-84,-86,169,-127,169,-94,-95,-96,-128,-90,169,-81,169,-99,-123,-113,-107,-115,-121,-120,-119,169,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,169,-90,169,169,169,-98,-97,169,169,169,-102,-133,169,-100,169,169,-101,]),'SEMCLN':([3,5,6,12,15,16,19,20,21,23,24,28,34,43,46,48,51,52,53,56,58,60,62,63,64,65,66,67,68,71,72,75,76,84,88,89,95,98,99,100,102,103,104,108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,134,139,140,141,142,143,144,145,146,147,148,150,151,152,153,156,157,158,159,162,164,165,187,190,196,197,198,199,200,202,204,205,207,208,209,210,211,212,213,215,216,217,218,219,220,222,223,225,226,229,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,264,265,266,279,280,282,283,285,286,289,291,292,293,294,296,297,299,304,305,306,307,308,309,311,314,315,316,317,322,323,324,331,333,334,338,339,],[7,-198,-197,25,-43,-41,44,-45,-42,-40,-44,-199,-46,-62,-60,-56,-203,-207,101,-15,-17,-9,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-29,-27,-72,-208,-61,154,-200,-47,-26,-25,-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-14,-30,-28,-71,-74,-208,-75,-63,227,-54,-67,-69,-66,-57,230,-50,-4,-91,-127,-94,-95,-96,-128,263,-139,264,-142,-148,-147,-135,-146,-186,-172,-140,-90,-208,-141,-143,-190,-134,-145,-188,-137,-136,-144,-152,-149,-138,-76,-68,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-20,-18,-24,-21,-208,-151,-155,-187,-208,308,-145,-90,-152,-191,-189,-37,-154,-153,-55,-98,-97,-156,-150,-145,-70,318,-179,-208,-102,-133,326,-183,-171,-168,-100,-173,-169,-170,-208,-101,]),'EQL':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,177,-85,-105,-92,-84,-86,177,-127,177,-94,-95,-96,-128,-90,177,-81,177,-99,177,-113,177,177,-121,-120,-119,177,-112,-111,-109,-117,-122,-108,-118,177,-116,-110,177,-90,177,177,177,-98,-97,177,177,177,-102,-133,177,-100,177,177,-101,]),'FUNC':([7,8,9,10,11,25,44,],[-208,-193,-208,-196,17,-194,-195,]),'INTEGER':([70,94,105,109,110,113,114,126,129,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,298,308,318,325,326,328,338,],[118,118,118,-130,118,-131,118,-129,-132,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-166,118,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,118,118,118,118,118,118,118,118,118,]),'VAR':([7,8,9,10,11,25,44,143,264,280,338,],[-208,-193,-208,-196,18,-194,-195,18,18,18,18,]),'REM_AGN':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,147,159,162,164,165,187,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,296,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-54,-127,-94,-95,-96,-128,274,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'SHL':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,181,-85,-105,-92,-84,-86,181,-127,181,-94,-95,-96,-128,-90,181,-81,181,-99,181,181,181,181,-121,-120,-119,181,181,181,181,-117,-122,181,-118,181,-116,181,181,-90,181,181,181,-98,-97,181,181,181,-102,-133,181,-100,181,181,-101,]),'DEFN':([209,285,],[281,281,]),'STRING_T':([33,35,36,42,47,56,57,58,60,61,62,63,64,65,66,67,68,71,72,75,76,77,79,80,83,84,85,86,88,103,104,107,130,134,135,136,137,138,139,157,158,185,188,192,238,258,259,262,],[72,-208,72,72,72,-15,72,-17,-9,72,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,72,-36,-29,72,-208,72,-26,-25,72,72,-14,-208,-35,72,72,-30,-4,-91,72,72,-52,72,-20,-18,-21,]),'TYPECAST':([70,94,105,109,110,113,114,126,129,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,298,308,318,325,326,328,338,],[130,130,130,-130,130,-131,130,-129,-132,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,-166,130,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,130,130,130,130,130,130,130,130,130,]),'AND':([70,94,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,131,132,143,147,149,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,187,205,209,210,214,222,224,228,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,260,264,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,285,286,290,295,297,298,299,301,307,308,313,314,315,317,318,324,325,326,328,335,337,338,339,],[129,129,129,-93,-130,129,-79,-90,-131,129,-80,-82,-88,-83,-87,-126,-89,167,-85,-105,-92,-129,-84,-132,-86,129,129,167,129,-127,167,129,-94,129,-95,-96,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,-128,129,-90,129,129,167,129,129,-81,167,-99,-123,-113,167,167,-121,-120,-119,167,-112,-111,-109,-117,-122,-108,-118,167,-116,-110,129,129,-166,129,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,167,129,129,-90,167,167,167,-98,129,-97,167,167,129,167,-102,-133,167,129,-100,129,129,129,167,167,129,-101,]),'RETURN':([143,264,280,338,],[205,205,205,205,]),'STRUCT':([33,35,36,42,47,56,57,58,60,61,62,63,64,65,66,67,68,71,72,75,76,77,79,80,83,84,85,86,88,103,104,130,134,135,136,137,138,139,157,158,185,188,192,238,258,259,262,],[73,-208,73,73,73,-15,73,-17,-9,73,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,73,-36,-29,73,-208,73,-26,-25,73,-14,-208,-35,73,73,-30,-4,-91,73,73,-52,73,-20,-18,-21,]),'ADD_AGN':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,147,159,162,164,165,187,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,296,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-54,-127,-94,-95,-96,-128,273,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'FLOAT':([70,94,105,109,110,113,114,126,129,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,298,308,318,325,326,328,338,],[131,131,131,-130,131,-131,131,-129,-132,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,-166,131,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,131,131,131,131,131,131,131,131,131,]),'GTR':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,176,-85,-105,-92,-84,-86,176,-127,176,-94,-95,-96,-128,-90,176,-81,176,-99,176,-113,176,176,-121,-120,-119,176,-112,-111,176,-117,-122,176,-118,176,-116,-110,176,-90,176,176,176,-98,-97,176,176,176,-102,-133,176,-100,176,176,-101,]),'BREAK':([143,264,280,338,],[217,217,217,217,]),'LEQ':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,175,-85,-105,-92,-84,-86,175,-127,175,-94,-95,-96,-128,-90,175,-81,175,-99,175,-113,175,175,-121,-120,-119,175,-112,-111,175,-117,-122,175,-118,175,-116,-110,175,-90,175,175,175,-98,-97,175,175,175,-102,-133,175,-100,175,175,-101,]),'CONTINUE':([143,264,280,338,],[213,213,213,213,]),'NOT':([70,94,105,109,110,113,114,126,129,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,267,268,269,270,271,272,273,274,275,276,277,278,280,281,298,308,318,325,326,328,338,],[132,132,132,-130,132,-131,132,-129,-132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,-166,132,-162,-167,-164,-160,-157,-161,-158,-159,-163,-165,132,132,132,132,132,132,132,132,132,]),'MUL_AGN':([108,111,112,115,116,117,118,119,120,121,123,124,125,128,131,147,159,162,164,165,187,203,209,222,231,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,285,286,296,297,299,314,315,324,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,-85,-105,-92,-84,-86,-54,-127,-94,-95,-96,-128,276,-90,-54,-81,-99,-123,-113,-107,-115,-121,-120,-119,-106,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,-90,-54,-55,-98,-97,-102,-133,-100,-101,]),'$end':([2,4,7,8,9,10,11,25,44,],[-1,0,-208,-193,-208,-196,-192,-194,-195,]),'TYPE':([7,8,9,10,11,25,33,35,36,42,44,47,56,57,58,60,61,62,63,64,65,66,67,68,71,72,75,76,77,79,80,83,84,85,86,88,103,104,107,130,134,135,136,137,138,139,143,157,158,185,188,192,238,258,259,262,264,280,338,],[-208,-193,-208,-196,22,-194,74,-208,74,74,-195,74,-15,74,-17,-9,74,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,74,-36,-29,74,-208,74,-26,-25,74,74,-14,-208,-35,74,74,-30,22,-4,-91,74,74,-52,74,-20,-18,-21,22,22,22,]),'OR':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,182,-85,-105,-92,-84,-86,182,-127,182,-94,-95,-96,-128,-90,182,-81,182,-99,-123,-113,182,-115,-121,-120,-119,182,-112,-111,-109,-117,-122,-108,-118,-114,-116,-110,182,-90,182,182,182,-98,-97,182,182,182,-102,-133,182,-100,182,182,-101,]),'QUO':([108,111,112,115,116,117,118,119,120,121,122,123,124,125,128,131,147,159,160,162,164,165,187,209,222,231,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,285,286,290,295,297,299,301,307,313,314,315,317,324,335,337,339,],[-93,-79,-90,-80,-82,-88,-83,-87,-126,-89,183,-85,-105,-92,-84,-86,183,-127,183,-94,-95,-96,-128,-90,183,-81,183,-99,183,183,183,183,183,183,183,183,183,183,183,-117,-122,183,183,183,-116,183,183,-90,183,183,183,-98,-97,183,183,183,-102,-133,183,-100,183,183,-101,]),'RUNE_T':([33,35,36,42,47,56,57,58,60,61,62,63,64,65,66,67,68,71,72,75,76,77,79,80,83,84,85,86,88,103,104,107,130,134,135,136,137,138,139,157,158,185,188,192,238,258,259,262,],[76,-208,76,76,76,-15,76,-17,-9,76,-5,-3,-8,-2,-10,-12,-16,-7,-13,-6,-11,-53,-51,76,-36,-29,76,-208,76,-26,-25,76,76,-14,-208,-35,76,76,-30,-4,-91,76,76,-52,76,-20,-18,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Conversion':([70,94,105,110,114,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,268,280,281,298,308,318,325,326,328,338,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'IdentList':([14,18,32,36,85,92,101,133,137,138,263,],[33,42,33,80,80,42,33,188,80,80,188,]),'ContinueStmt':([143,264,280,338,],[196,196,196,196,]),'Statement':([143,264,280,338,],[197,197,305,197,]),'IfStmt':([143,264,280,321,338,],[198,198,198,333,198,]),'MethodName':([40,],[91,]),'TypeToken':([33,36,42,47,57,61,80,85,88,107,130,137,138,185,188,238,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'Assignment':([143,210,264,280,318,326,338,],[199,199,199,199,199,199,199,]),'ExprOpt':([163,298,],[235,312,]),'TypeName':([33,36,42,47,57,61,80,85,88,107,130,137,138,185,188,238,],[65,65,65,65,65,65,65,65,65,158,65,65,65,65,65,65,]),'ExprCaseClause':([319,],[332,]),'LabeledStmt':([143,264,280,338,],[202,202,202,202,]),'TypeAssertion':([120,],[165,]),'Receiver':([17,],[40,]),'ElementType':([185,],[259,]),'ExprList':([94,105,143,149,161,210,228,264,268,280,318,326,338,],[148,156,203,229,234,203,296,203,304,203,203,203,203,]),'PkgName':([1,13,50,],[6,27,27,]),'VarSpecRep':([41,],[92,]),'FuncBody':([89,144,],[141,226,]),'VarDecl':([11,143,264,280,338,],[21,21,21,21,21,]),'TopLvlDeclRep':([9,],[11,]),'Operand':([70,94,105,110,114,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,268,280,281,298,308,318,325,326,328,338,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'TypeSpec':([22,96,],[48,153,]),'ExprStmt':([143,210,264,280,318,326,338,],[204,204,204,204,204,204,204,]),'Parameters':([17,39,91,],[38,88,88,]),'UnaryOp':([70,94,105,110,114,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,268,280,281,298,308,318,325,326,328,338,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'SourceFile':([0,],[2,]),'Label':([143,201,213,217,264,280,338,],[206,266,289,291,206,206,206,]),'ImportPath':([30,],[51,]),'ExprCaseClauseRep':([310,],[319,]),'ExprSwitchStmt':([143,264,280,338,],[207,207,207,207,]),'TypeLit':([33,36,42,47,57,61,80,85,88,130,137,138,185,188,238,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'ImportDeclRep':([7,],[9,]),'ParamDeclCommaRep':([36,138,],[82,195,]),'FuncDecl':([11,],[24,]),'Selector':([120,],[164,]),'IncDecStmt':([143,210,264,280,318,326,338,],[200,200,200,200,200,200,200,]),'GotoStmt':([143,264,280,338,],[208,208,208,208,]),'CondBlkOpt':([210,],[287,]),'ParamList':([36,],[87,]),'Signature':([39,91,],[89,144,]),'Block':([89,143,144,264,280,287,295,321,338,],[142,211,142,211,211,309,311,334,211,]),'PkgNameDotOpt':([13,50,],[30,30,]),'SwitchStmt':([143,264,280,338,],[212,212,212,212,]),'VarSpec':([18,92,],[43,146,]),'QualifiedIdent':([33,36,42,47,57,61,80,85,88,107,130,137,138,185,188,238,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'Literal':([70,94,105,110,114,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,268,280,281,298,308,318,325,326,328,338,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'IdentRep':([35,86,135,],[79,79,192,]),'PtrType':([33,36,42,47,57,61,80,85,88,130,137,138,185,188,238,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'ImportDecl':([9,],[12,]),'ExprListOpt':([95,],[151,]),'OperandName':([70,94,105,110,114,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,268,280,281,298,308,318,325,326,328,338,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'AssignOp':([203,],[268,]),'FieldDeclRep':([133,263,],[189,302,]),'FuncName':([17,],[39,]),'start':([0,],[4,]),'Declaration':([11,143,264,280,338,],[15,215,215,215,215,]),'Condition':([210,308,],[284,316,]),'StructType':([33,36,42,47,57,61,80,85,88,130,137,138,185,188,238,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'ConstSpec':([14,32,101,],[34,53,53,]),'epsilon':([7,9,13,26,32,35,41,45,50,86,95,101,133,135,143,161,163,210,263,264,280,298,310,311,318,326,338,],[8,10,29,49,55,77,93,97,29,77,150,55,191,77,216,233,236,283,191,216,306,236,320,322,306,306,216,]),'SimpleStmt':([143,210,264,280,318,326,338,],[219,282,219,219,327,336,219,]),'ImportSpecRep':([26,],[50,]),'MethodDecl':([11,],[20,]),'ExprSwitchCase':([319,],[329,]),'ConstSpecRep':([32,101,],[54,155,]),'ReturnStmt':([143,264,280,338,],[218,218,218,218,]),'ConstDecl':([11,143,264,280,338,],[23,23,23,23,23,]),'Slice':([120,],[162,]),'ArrayType':([33,36,42,47,57,61,80,85,88,130,137,138,185,188,238,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ParamDecl':([36,85,137,138,],[81,138,193,194,]),'ForStmt':([143,264,280,338,],[220,220,220,220,]),'StmtList':([143,264,338,],[221,303,340,]),'PmryExpr':([70,94,105,110,114,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,268,280,281,298,308,318,325,326,328,338,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'ImportSpec':([13,50,],[28,99,]),'Type':([33,36,42,47,57,61,80,85,88,130,137,138,185,188,238,],[59,83,95,98,103,106,136,83,140,186,83,83,258,261,300,]),'TypeSpecRep':([45,],[96,]),'ExprListTypeOpt':([161,],[232,]),'TypeDecl':([11,143,264,280,338,],[16,16,16,16,16,]),'BaseType':([57,],[104,]),'Expr':([70,94,105,114,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,268,280,281,298,308,318,325,326,328,338,],[122,147,147,160,222,147,147,237,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,279,286,290,295,147,301,222,147,222,307,313,317,222,335,222,337,222,]),'UnaryExpr':([70,94,105,110,114,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,268,280,281,298,308,318,325,326,328,338,],[124,124,124,159,124,187,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'ArrayLength':([70,],[127,]),'ForClause':([210,],[288,]),'TopLvlDecl':([11,],[19,]),'ShortVarDecl':([143,210,264,280,318,326,338,],[223,223,223,223,223,223,223,]),'TypeDef':([22,96,],[46,46,]),'FieldDecl':([133,263,],[190,190,]),'BreakStmt':([143,264,280,338,],[225,225,225,225,]),'PkgClause':([0,],[3,]),'BasicLit':([70,94,105,110,114,132,143,149,161,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,205,210,214,224,228,260,264,268,280,281,298,308,318,325,326,328,338,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'ElseOpt':([311,],[323,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','new_parser.py',24),
  ('Type -> TypeName','Type',1,'p_type','new_parser.py',28),
  ('Type -> TypeLit','Type',1,'p_type','new_parser.py',29),
  ('Type -> LPRN Type RPRN','Type',3,'p_type','new_parser.py',30),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','new_parser.py',37),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','new_parser.py',38),
  ('TypeToken -> INT_T','TypeToken',1,'p_type_token','new_parser.py',42),
  ('TypeToken -> FLOAT_T','TypeToken',1,'p_type_token','new_parser.py',43),
  ('TypeToken -> UINT_T','TypeToken',1,'p_type_token','new_parser.py',44),
  ('TypeToken -> COMPLEX_T','TypeToken',1,'p_type_token','new_parser.py',45),
  ('TypeToken -> RUNE_T','TypeToken',1,'p_type_token','new_parser.py',46),
  ('TypeToken -> BOOL_T','TypeToken',1,'p_type_token','new_parser.py',47),
  ('TypeToken -> STRING_T','TypeToken',1,'p_type_token','new_parser.py',48),
  ('TypeToken -> TYPE IDENT','TypeToken',2,'p_type_token','new_parser.py',49),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','new_parser.py',59),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','new_parser.py',60),
  ('TypeLit -> PtrType','TypeLit',1,'p_type_lit','new_parser.py',61),
  ('ArrayType -> LSQR ArrayLength RSQR ElementType','ArrayType',4,'p_array_type','new_parser.py',66),
  ('ArrayLength -> Expr','ArrayLength',1,'p_array_length','new_parser.py',70),
  ('ElementType -> Type','ElementType',1,'p_element_type','new_parser.py',74),
  ('StructType -> STRUCT LCURL FieldDeclRep RCURL','StructType',4,'p_struct_type','new_parser.py',78),
  ('FieldDeclRep -> FieldDecl SEMCLN FieldDeclRep','FieldDeclRep',3,'p_field_decl_rep','new_parser.py',82),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','new_parser.py',83),
  ('FieldDecl -> IdentList Type','FieldDecl',2,'p_field_decl','new_parser.py',88),
  ('PtrType -> MUL BaseType','PtrType',2,'p_point_type','new_parser.py',92),
  ('BaseType -> Type','BaseType',1,'p_base_type','new_parser.py',96),
  ('Signature -> Parameters','Signature',1,'p_sign','new_parser.py',100),
  ('Signature -> Parameters Type','Signature',2,'p_sign','new_parser.py',101),
  ('Parameters -> LPRN RPRN','Parameters',2,'p_params','new_parser.py',108),
  ('Parameters -> LPRN ParamList RPRN','Parameters',3,'p_params','new_parser.py',109),
  ('ParamList -> ParamDecl','ParamList',1,'p_param_list','new_parser.py',116),
  ('ParamList -> ParamDeclCommaRep','ParamList',1,'p_param_list','new_parser.py',117),
  ('ParamDeclCommaRep -> COMMA ParamDecl ParamDeclCommaRep','ParamDeclCommaRep',3,'p_param_decl_comma_rep','new_parser.py',121),
  ('ParamDeclCommaRep -> ParamDecl COMMA ParamDecl','ParamDeclCommaRep',3,'p_param_decl_comma_rep','new_parser.py',122),
  ('ParamDecl -> IdentList Type','ParamDecl',2,'p_param_decl','new_parser.py',129),
  ('ParamDecl -> Type','ParamDecl',1,'p_param_decl','new_parser.py',130),
  ('Block -> LCURL StmtList RCURL','Block',3,'p_block','new_parser.py',137),
  ('StmtList -> Statement SEMCLN StmtList','StmtList',3,'p_stat_rep','new_parser.py',141),
  ('StmtList -> epsilon','StmtList',1,'p_stat_rep','new_parser.py',142),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','new_parser.py',149),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','new_parser.py',150),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','new_parser.py',151),
  ('TopLvlDecl -> Declaration','TopLvlDecl',1,'p_top_level_decl','new_parser.py',155),
  ('TopLvlDecl -> FuncDecl','TopLvlDecl',1,'p_top_level_decl','new_parser.py',156),
  ('TopLvlDecl -> MethodDecl','TopLvlDecl',1,'p_top_level_decl','new_parser.py',157),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','new_parser.py',161),
  ('ConstDecl -> CONST LPRN ConstSpecRep RPRN','ConstDecl',4,'p_const_decl','new_parser.py',162),
  ('ConstSpecRep -> ConstSpec SEMCLN ConstSpecRep','ConstSpecRep',3,'p_const_spec_rep','new_parser.py',169),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','new_parser.py',170),
  ('ConstSpec -> IdentList Type AGN ExprList','ConstSpec',4,'p_const_spec','new_parser.py',177),
  ('IdentList -> IDENT IdentRep','IdentList',2,'p_ident_list','new_parser.py',181),
  ('IdentRep -> COMMA IDENT IdentRep','IdentRep',3,'p_ident_rep','new_parser.py',185),
  ('IdentRep -> epsilon','IdentRep',1,'p_ident_rep','new_parser.py',186),
  ('ExprList -> Expr','ExprList',1,'p_expr_list','new_parser.py',193),
  ('ExprList -> Expr COMMA ExprList','ExprList',3,'p_expr_list','new_parser.py',194),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','new_parser.py',201),
  ('TypeDecl -> TYPE LPRN TypeSpecRep RPRN','TypeDecl',4,'p_type_decl','new_parser.py',202),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMCLN','TypeSpecRep',3,'p_type_spec_rep','new_parser.py',205),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','new_parser.py',206),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','new_parser.py',209),
  ('TypeDef -> IDENT Type','TypeDef',2,'p_type_def','new_parser.py',213),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','new_parser.py',217),
  ('VarDecl -> VAR LPRN VarSpecRep RPRN','VarDecl',4,'p_var_decl','new_parser.py',218),
  ('VarSpecRep -> VarSpecRep VarSpec SEMCLN','VarSpecRep',3,'p_var_spec_rep','new_parser.py',221),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','new_parser.py',222),
  ('VarSpec -> IdentList Type ExprListOpt','VarSpec',3,'p_var_spec','new_parser.py',225),
  ('VarSpec -> IdentList AGN ExprList','VarSpec',3,'p_var_spec','new_parser.py',226),
  ('ExprListOpt -> AGN ExprList','ExprListOpt',2,'p_expr_list_opt','new_parser.py',229),
  ('ExprListOpt -> epsilon','ExprListOpt',1,'p_expr_list_opt','new_parser.py',230),
  ('ShortVarDecl -> IDENT DEFN Expr','ShortVarDecl',3,'p_short_var_decl','new_parser.py',233),
  ('FuncDecl -> FUNC FuncName Signature FuncBody','FuncDecl',4,'p_func_decl','new_parser.py',236),
  ('FuncDecl -> FUNC FuncName Signature','FuncDecl',3,'p_func_decl','new_parser.py',237),
  ('FuncName -> IDENT','FuncName',1,'p_func_name','new_parser.py',244),
  ('FuncBody -> Block','FuncBody',1,'p_func_body','new_parser.py',248),
  ('MethodDecl -> FUNC Receiver MethodName Signature','MethodDecl',4,'p_method_decl','new_parser.py',252),
  ('MethodDecl -> FUNC Receiver MethodName Signature FuncBody','MethodDecl',5,'p_method_decl','new_parser.py',253),
  ('Receiver -> Parameters','Receiver',1,'p_receiver','new_parser.py',256),
  ('MethodName -> IDENT','MethodName',1,'p_method_name','new_parser.py',259),
  ('Operand -> Literal','Operand',1,'p_operand','new_parser.py',262),
  ('Operand -> OperandName','Operand',1,'p_operand','new_parser.py',263),
  ('Operand -> LPRN Expr RPRN','Operand',3,'p_operand','new_parser.py',264),
  ('Literal -> BasicLit','Literal',1,'p_literal','new_parser.py',271),
  ('BasicLit -> INTEGER','BasicLit',1,'p_basic_lit','new_parser.py',275),
  ('BasicLit -> OCTAL','BasicLit',1,'p_basic_lit','new_parser.py',276),
  ('BasicLit -> HEX','BasicLit',1,'p_basic_lit','new_parser.py',277),
  ('BasicLit -> FLOAT','BasicLit',1,'p_basic_lit','new_parser.py',278),
  ('BasicLit -> IMAGINARY','BasicLit',1,'p_basic_lit','new_parser.py',279),
  ('BasicLit -> RUNE','BasicLit',1,'p_basic_lit','new_parser.py',280),
  ('BasicLit -> STRING','BasicLit',1,'p_basic_lit','new_parser.py',281),
  ('OperandName -> IDENT','OperandName',1,'p_operand_name','new_parser.py',285),
  ('QualifiedIdent -> IDENT DOT TypeName','QualifiedIdent',3,'p_quali_ident','new_parser.py',289),
  ('PmryExpr -> Operand','PmryExpr',1,'p_prim_expr','new_parser.py',293),
  ('PmryExpr -> Conversion','PmryExpr',1,'p_prim_expr','new_parser.py',294),
  ('PmryExpr -> PmryExpr Slice','PmryExpr',2,'p_prim_expr','new_parser.py',295),
  ('PmryExpr -> PmryExpr Selector','PmryExpr',2,'p_prim_expr','new_parser.py',296),
  ('PmryExpr -> PmryExpr TypeAssertion','PmryExpr',2,'p_prim_expr','new_parser.py',297),
  ('PmryExpr -> PmryExpr LSQR Expr RSQR','PmryExpr',4,'p_prim_expr','new_parser.py',298),
  ('PmryExpr -> PmryExpr LPRN ExprListTypeOpt RPRN','PmryExpr',4,'p_prim_expr','new_parser.py',299),
  ('Selector -> DOT IDENT','Selector',2,'p_selector','new_parser.py',302),
  ('Slice -> LSQR ExprOpt COLON ExprOpt RSQR','Slice',5,'p_slice','new_parser.py',307),
  ('Slice -> LSQR ExprOpt COLON Expr COLON Expr RSQR','Slice',7,'p_slice','new_parser.py',308),
  ('TypeAssertion -> DOT LPRN Type RPRN','TypeAssertion',4,'p_type_assert','new_parser.py',311),
  ('ExprListTypeOpt -> ExprList','ExprListTypeOpt',1,'p_expr_list_type_opt','new_parser.py',314),
  ('ExprListTypeOpt -> epsilon','ExprListTypeOpt',1,'p_expr_list_type_opt','new_parser.py',315),
  ('Expr -> UnaryExpr','Expr',1,'p_expr','new_parser.py',318),
  ('Expr -> Expr LOR Expr','Expr',3,'p_expr','new_parser.py',319),
  ('Expr -> Expr LAND Expr','Expr',3,'p_expr','new_parser.py',320),
  ('Expr -> Expr NEQ Expr','Expr',3,'p_expr','new_parser.py',321),
  ('Expr -> Expr EQL Expr','Expr',3,'p_expr','new_parser.py',322),
  ('Expr -> Expr LSS Expr','Expr',3,'p_expr','new_parser.py',323),
  ('Expr -> Expr GTR Expr','Expr',3,'p_expr','new_parser.py',324),
  ('Expr -> Expr LEQ Expr','Expr',3,'p_expr','new_parser.py',325),
  ('Expr -> Expr GEQ Expr','Expr',3,'p_expr','new_parser.py',326),
  ('Expr -> Expr OR Expr','Expr',3,'p_expr','new_parser.py',327),
  ('Expr -> Expr XOR Expr','Expr',3,'p_expr','new_parser.py',328),
  ('Expr -> Expr QUO Expr','Expr',3,'p_expr','new_parser.py',329),
  ('Expr -> Expr REM Expr','Expr',3,'p_expr','new_parser.py',330),
  ('Expr -> Expr SHL Expr','Expr',3,'p_expr','new_parser.py',331),
  ('Expr -> Expr SHR Expr','Expr',3,'p_expr','new_parser.py',332),
  ('Expr -> Expr ADD Expr','Expr',3,'p_expr','new_parser.py',333),
  ('Expr -> Expr SUB Expr','Expr',3,'p_expr','new_parser.py',334),
  ('Expr -> Expr MUL Expr','Expr',3,'p_expr','new_parser.py',335),
  ('Expr -> Expr AND Expr','Expr',3,'p_expr','new_parser.py',336),
  ('ExprOpt -> Expr','ExprOpt',1,'p_expr_opt','new_parser.py',343),
  ('ExprOpt -> epsilon','ExprOpt',1,'p_expr_opt','new_parser.py',344),
  ('UnaryExpr -> PmryExpr','UnaryExpr',1,'p_unary_expr','new_parser.py',348),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','new_parser.py',349),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','new_parser.py',350),
  ('UnaryOp -> ADD','UnaryOp',1,'p_unary_op','new_parser.py',357),
  ('UnaryOp -> SUB','UnaryOp',1,'p_unary_op','new_parser.py',358),
  ('UnaryOp -> MUL','UnaryOp',1,'p_unary_op','new_parser.py',359),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','new_parser.py',360),
  ('Conversion -> TYPECAST Type LPRN Expr RPRN','Conversion',5,'p_conversion','new_parser.py',364),
  ('Statement -> Declaration','Statement',1,'p_statement','new_parser.py',368),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','new_parser.py',369),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','new_parser.py',370),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','new_parser.py',371),
  ('Statement -> BreakStmt','Statement',1,'p_statement','new_parser.py',372),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','new_parser.py',373),
  ('Statement -> GotoStmt','Statement',1,'p_statement','new_parser.py',374),
  ('Statement -> Block','Statement',1,'p_statement','new_parser.py',375),
  ('Statement -> IfStmt','Statement',1,'p_statement','new_parser.py',376),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','new_parser.py',377),
  ('Statement -> ForStmt','Statement',1,'p_statement','new_parser.py',378),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','new_parser.py',382),
  ('SimpleStmt -> ExprStmt','SimpleStmt',1,'p_simple_stmt','new_parser.py',383),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','new_parser.py',384),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','new_parser.py',385),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','new_parser.py',386),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','new_parser.py',391),
  ('Label -> IDENT','Label',1,'p_label','new_parser.py',395),
  ('ExprStmt -> Expr','ExprStmt',1,'p_expression_stmt','new_parser.py',399),
  ('IncDecStmt -> Expr INC','IncDecStmt',2,'p_inc_dec','new_parser.py',403),
  ('IncDecStmt -> Expr DEC','IncDecStmt',2,'p_inc_dec','new_parser.py',404),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','new_parser.py',408),
  ('Assignment -> ExprList AssignOp ExprList','Assignment',3,'p_assignment','new_parser.py',411),
  ('AssignOp -> ADD_AGN','AssignOp',1,'p_assign_op','new_parser.py',414),
  ('AssignOp -> SUB_AGN','AssignOp',1,'p_assign_op','new_parser.py',415),
  ('AssignOp -> MUL_AGN','AssignOp',1,'p_assign_op','new_parser.py',416),
  ('AssignOp -> QUO_AGN','AssignOp',1,'p_assign_op','new_parser.py',417),
  ('AssignOp -> REM_AGN','AssignOp',1,'p_assign_op','new_parser.py',418),
  ('AssignOp -> AND_AGN','AssignOp',1,'p_assign_op','new_parser.py',419),
  ('AssignOp -> OR_AGN','AssignOp',1,'p_assign_op','new_parser.py',420),
  ('AssignOp -> XOR_AGN','AssignOp',1,'p_assign_op','new_parser.py',421),
  ('AssignOp -> SHL_AGN','AssignOp',1,'p_assign_op','new_parser.py',422),
  ('AssignOp -> SHR_AGN','AssignOp',1,'p_assign_op','new_parser.py',423),
  ('AssignOp -> AGN','AssignOp',1,'p_assign_op','new_parser.py',424),
  ('IfStmt -> IF Expr Block ElseOpt','IfStmt',4,'p_if_statement','new_parser.py',428),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','new_parser.py',431),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','new_parser.py',432),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','new_parser.py',433),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','new_parser.py',436),
  ('ExprSwitchStmt -> SWITCH Expr LCURL ExprCaseClauseRep RCURL','ExprSwitchStmt',5,'p_expr_switch_stmt','new_parser.py',439),
  ('ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause','ExprCaseClauseRep',2,'p_expr_case_clause_rep','new_parser.py',442),
  ('ExprCaseClauseRep -> epsilon','ExprCaseClauseRep',1,'p_expr_case_clause_rep','new_parser.py',443),
  ('ExprCaseClause -> ExprSwitchCase COLON StmtList','ExprCaseClause',3,'p_expr_case_clause','new_parser.py',446),
  ('ExprSwitchCase -> CASE Expr','ExprSwitchCase',2,'p_expr_switch_case','new_parser.py',449),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_expr_switch_case','new_parser.py',450),
  ('ForStmt -> FOR CondBlkOpt Block','ForStmt',3,'p_for','new_parser.py',453),
  ('CondBlkOpt -> epsilon','CondBlkOpt',1,'p_cond_blk_opt','new_parser.py',456),
  ('CondBlkOpt -> Condition','CondBlkOpt',1,'p_cond_blk_opt','new_parser.py',457),
  ('CondBlkOpt -> ForClause','CondBlkOpt',1,'p_cond_blk_opt','new_parser.py',458),
  ('Condition -> Expr','Condition',1,'p_condition','new_parser.py',461),
  ('ForClause -> SimpleStmt SEMCLN SEMCLN SimpleStmt','ForClause',4,'p_forclause','new_parser.py',464),
  ('ForClause -> SimpleStmt SEMCLN Condition SEMCLN SimpleStmt','ForClause',5,'p_forclause','new_parser.py',465),
  ('ReturnStmt -> RETURN','ReturnStmt',1,'p_return','new_parser.py',471),
  ('ReturnStmt -> RETURN Expr','ReturnStmt',2,'p_return','new_parser.py',472),
  ('BreakStmt -> BREAK','BreakStmt',1,'p_break','new_parser.py',479),
  ('BreakStmt -> BREAK Label','BreakStmt',2,'p_break','new_parser.py',480),
  ('ContinueStmt -> CONTINUE','ContinueStmt',1,'p_continue','new_parser.py',487),
  ('ContinueStmt -> CONTINUE Label','ContinueStmt',2,'p_continue','new_parser.py',488),
  ('SourceFile -> PkgClause SEMCLN ImportDeclRep TopLvlDeclRep','SourceFile',4,'p_source_file','new_parser.py',495),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','new_parser.py',499),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMCLN','ImportDeclRep',3,'p_import_decl_rep','new_parser.py',500),
  ('TopLvlDeclRep -> TopLvlDeclRep TopLvlDecl SEMCLN','TopLvlDeclRep',3,'p_top_level_decl_rep','new_parser.py',507),
  ('TopLvlDeclRep -> epsilon','TopLvlDeclRep',1,'p_top_level_decl_rep','new_parser.py',508),
  ('PkgClause -> PACKAGE PkgName','PkgClause',2,'p_pkg_clause','new_parser.py',515),
  ('PkgName -> IDENT','PkgName',1,'p_pkg_name','new_parser.py',519),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','new_parser.py',524),
  ('ImportDecl -> IMPORT LPRN ImportSpecRep RPRN','ImportDecl',4,'p_import_decl','new_parser.py',525),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMCLN','ImportSpecRep',3,'p_import_spec_rep','new_parser.py',532),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','new_parser.py',533),
  ('ImportSpec -> PkgNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','new_parser.py',540),
  ('PkgNameDotOpt -> DOT','PkgNameDotOpt',1,'p_pkg_name_dot_opt','new_parser.py',545),
  ('PkgNameDotOpt -> PkgName','PkgNameDotOpt',1,'p_pkg_name_dot_opt','new_parser.py',546),
  ('PkgNameDotOpt -> epsilon','PkgNameDotOpt',1,'p_pkg_name_dot_opt','new_parser.py',547),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','new_parser.py',554),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','new_parser.py',559),
]
